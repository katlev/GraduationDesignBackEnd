<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.katle.design.dao.LiteratureFileMapper" >
  <resultMap id="BaseResultMap" type="com.katle.design.entities.LiteratureFile" >
    <id column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="literature_name" property="literatureName" jdbcType="VARCHAR" />
    <result column="literature_path" property="literaturePath" jdbcType="VARCHAR" />
    <result column="literature_check" property="literatureCheck" jdbcType="INTEGER" />
    <result column="literature_opinion" property="literatureOpinion" jdbcType="VARCHAR" />
    <result column="literature_checkMan" property="literatureCheckman" jdbcType="BIGINT" />
    <result column="literature_year" property="literatureYear" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, literature_name, literature_path, literature_check, literature_opinion, 
    literature_checkMan, literature_year
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.katle.design.entities.LiteratureFileExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from literaturefile
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from literaturefile
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from literaturefile
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.katle.design.entities.LiteratureFileExample" >
    delete from literaturefile
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.katle.design.entities.LiteratureFile" >
    insert into literaturefile (user_id, literature_name, literature_path, 
      literature_check, literature_opinion, literature_checkMan, 
      literature_year)
    values (#{userId,jdbcType=BIGINT}, #{literatureName,jdbcType=VARCHAR}, #{literaturePath,jdbcType=VARCHAR}, 
      #{literatureCheck,jdbcType=INTEGER}, #{literatureOpinion,jdbcType=VARCHAR}, #{literatureCheckman,jdbcType=BIGINT}, 
      #{literatureYear,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.katle.design.entities.LiteratureFile" >
    insert into literaturefile
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="literatureName != null" >
        literature_name,
      </if>
      <if test="literaturePath != null" >
        literature_path,
      </if>
      <if test="literatureCheck != null" >
        literature_check,
      </if>
      <if test="literatureOpinion != null" >
        literature_opinion,
      </if>
      <if test="literatureCheckman != null" >
        literature_checkMan,
      </if>
      <if test="literatureYear != null" >
        literature_year,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="literatureName != null" >
        #{literatureName,jdbcType=VARCHAR},
      </if>
      <if test="literaturePath != null" >
        #{literaturePath,jdbcType=VARCHAR},
      </if>
      <if test="literatureCheck != null" >
        #{literatureCheck,jdbcType=INTEGER},
      </if>
      <if test="literatureOpinion != null" >
        #{literatureOpinion,jdbcType=VARCHAR},
      </if>
      <if test="literatureCheckman != null" >
        #{literatureCheckman,jdbcType=BIGINT},
      </if>
      <if test="literatureYear != null" >
        #{literatureYear,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.katle.design.entities.LiteratureFileExample" resultType="java.lang.Integer" >
    select count(*) from literaturefile
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update literaturefile
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.literatureName != null" >
        literature_name = #{record.literatureName,jdbcType=VARCHAR},
      </if>
      <if test="record.literaturePath != null" >
        literature_path = #{record.literaturePath,jdbcType=VARCHAR},
      </if>
      <if test="record.literatureCheck != null" >
        literature_check = #{record.literatureCheck,jdbcType=INTEGER},
      </if>
      <if test="record.literatureOpinion != null" >
        literature_opinion = #{record.literatureOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.literatureCheckman != null" >
        literature_checkMan = #{record.literatureCheckman,jdbcType=BIGINT},
      </if>
      <if test="record.literatureYear != null" >
        literature_year = #{record.literatureYear,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update literaturefile
    set user_id = #{record.userId,jdbcType=BIGINT},
      literature_name = #{record.literatureName,jdbcType=VARCHAR},
      literature_path = #{record.literaturePath,jdbcType=VARCHAR},
      literature_check = #{record.literatureCheck,jdbcType=INTEGER},
      literature_opinion = #{record.literatureOpinion,jdbcType=VARCHAR},
      literature_checkMan = #{record.literatureCheckman,jdbcType=BIGINT},
      literature_year = #{record.literatureYear,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.katle.design.entities.LiteratureFile" >
    update literaturefile
    <set >
      <if test="literatureName != null" >
        literature_name = #{literatureName,jdbcType=VARCHAR},
      </if>
      <if test="literaturePath != null" >
        literature_path = #{literaturePath,jdbcType=VARCHAR},
      </if>
      <if test="literatureCheck != null" >
        literature_check = #{literatureCheck,jdbcType=INTEGER},
      </if>
      <if test="literatureOpinion != null" >
        literature_opinion = #{literatureOpinion,jdbcType=VARCHAR},
      </if>
      <if test="literatureCheckman != null" >
        literature_checkMan = #{literatureCheckman,jdbcType=BIGINT},
      </if>
      <if test="literatureYear != null" >
        literature_year = #{literatureYear,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.katle.design.entities.LiteratureFile" >
    update literaturefile
    set literature_name = #{literatureName,jdbcType=VARCHAR},
      literature_path = #{literaturePath,jdbcType=VARCHAR},
      literature_check = #{literatureCheck,jdbcType=INTEGER},
      literature_opinion = #{literatureOpinion,jdbcType=VARCHAR},
      literature_checkMan = #{literatureCheckman,jdbcType=BIGINT},
      literature_year = #{literatureYear,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>