<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.katle.design.dao.TaskFileMapper" >
  <resultMap id="BaseResultMap" type="com.katle.design.entities.TaskFile" >
    <id column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="task_name" property="taskName" jdbcType="VARCHAR" />
    <result column="task_path" property="taskPath" jdbcType="VARCHAR" />
    <result column="task_check" property="taskCheck" jdbcType="INTEGER" />
    <result column="task_opinion" property="taskOpinion" jdbcType="VARCHAR" />
    <result column="task_checkMan" property="taskCheckman" jdbcType="BIGINT" />
    <result column="task_year" property="taskYear" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, task_name, task_path, task_check, task_opinion, task_checkMan, task_year
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.katle.design.entities.TaskFileExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from taskfile
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from taskfile
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from taskfile
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.katle.design.entities.TaskFileExample" >
    delete from taskfile
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.katle.design.entities.TaskFile" >
    insert into taskfile (user_id, task_name, task_path, 
      task_check, task_opinion, task_checkMan, 
      task_year)
    values (#{userId,jdbcType=BIGINT}, #{taskName,jdbcType=VARCHAR}, #{taskPath,jdbcType=VARCHAR}, 
      #{taskCheck,jdbcType=INTEGER}, #{taskOpinion,jdbcType=VARCHAR}, #{taskCheckman,jdbcType=BIGINT}, 
      #{taskYear,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.katle.design.entities.TaskFile" >
    insert into taskfile
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="taskName != null" >
        task_name,
      </if>
      <if test="taskPath != null" >
        task_path,
      </if>
      <if test="taskCheck != null" >
        task_check,
      </if>
      <if test="taskOpinion != null" >
        task_opinion,
      </if>
      <if test="taskCheckman != null" >
        task_checkMan,
      </if>
      <if test="taskYear != null" >
        task_year,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="taskName != null" >
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskPath != null" >
        #{taskPath,jdbcType=VARCHAR},
      </if>
      <if test="taskCheck != null" >
        #{taskCheck,jdbcType=INTEGER},
      </if>
      <if test="taskOpinion != null" >
        #{taskOpinion,jdbcType=VARCHAR},
      </if>
      <if test="taskCheckman != null" >
        #{taskCheckman,jdbcType=BIGINT},
      </if>
      <if test="taskYear != null" >
        #{taskYear,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.katle.design.entities.TaskFileExample" resultType="java.lang.Integer" >
    select count(*) from taskfile
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update taskfile
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.taskName != null" >
        task_name = #{record.taskName,jdbcType=VARCHAR},
      </if>
      <if test="record.taskPath != null" >
        task_path = #{record.taskPath,jdbcType=VARCHAR},
      </if>
      <if test="record.taskCheck != null" >
        task_check = #{record.taskCheck,jdbcType=INTEGER},
      </if>
      <if test="record.taskOpinion != null" >
        task_opinion = #{record.taskOpinion,jdbcType=VARCHAR},
      </if>
      <if test="record.taskCheckman != null" >
        task_checkMan = #{record.taskCheckman,jdbcType=BIGINT},
      </if>
      <if test="record.taskYear != null" >
        task_year = #{record.taskYear,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update taskfile
    set user_id = #{record.userId,jdbcType=BIGINT},
      task_name = #{record.taskName,jdbcType=VARCHAR},
      task_path = #{record.taskPath,jdbcType=VARCHAR},
      task_check = #{record.taskCheck,jdbcType=INTEGER},
      task_opinion = #{record.taskOpinion,jdbcType=VARCHAR},
      task_checkMan = #{record.taskCheckman,jdbcType=BIGINT},
      task_year = #{record.taskYear,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.katle.design.entities.TaskFile" >
    update taskfile
    <set >
      <if test="taskName != null" >
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskPath != null" >
        task_path = #{taskPath,jdbcType=VARCHAR},
      </if>
      <if test="taskCheck != null" >
        task_check = #{taskCheck,jdbcType=INTEGER},
      </if>
      <if test="taskOpinion != null" >
        task_opinion = #{taskOpinion,jdbcType=VARCHAR},
      </if>
      <if test="taskCheckman != null" >
        task_checkMan = #{taskCheckman,jdbcType=BIGINT},
      </if>
      <if test="taskYear != null" >
        task_year = #{taskYear,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.katle.design.entities.TaskFile" >
    update taskfile
    set task_name = #{taskName,jdbcType=VARCHAR},
      task_path = #{taskPath,jdbcType=VARCHAR},
      task_check = #{taskCheck,jdbcType=INTEGER},
      task_opinion = #{taskOpinion,jdbcType=VARCHAR},
      task_checkMan = #{taskCheckman,jdbcType=BIGINT},
      task_year = #{taskYear,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>